import os

import iris

from jazz import cmip5


def test_path():
    """Test the path generated by cmip5.path exists."""
    path = cmip5.path('HadGEM2-ES', 'historical', 'mon', 'atmos', 'Amon',
                      'r1i1p1', 'ts')
    assert os.path.exists('/'.join(path.split('/')[0:-1]))


def test_fetch():
    path = cmip5.path('IPSL-CM5A-LR', 'amip', 'mon', 'atmos', 'Amon',
                      '*', 'ts')
    cube = cmip5.fetch(path)
    assert isinstance(cube, iris.cube.Cube)


def test_fetch2():
    path = cmip5.path('CCSM4', 'rcp85', 'mon', 'atmos', 'Amon',
                      '*', 'ts')
    cube = cmip5.fetch(path)
    assert isinstance(cube, iris.cube.Cube)

"""
def test_fetch3():
    constraint = iris.Constraint(time=lambda cell: 2070 <= cell.point.year
                                 <= 2100)
    path = cmip5.path('HadGEM2-ES', 'rcp85', 'mon', 'atmos', 'Amon',
                      '*', 'ts')
    with iris.FUTURE.context(cell_datetime_objects=True):
        cube = cmip5.fetch(path, constraint)
    assert isinstance(cube, iris.cube.Cube)
"""

def test_get_fx():
    cube = cmip5.get_fx('IPSL-CM5A-LR', 'sftlf')
    assert isinstance(cube, iris.cube.Cube)

